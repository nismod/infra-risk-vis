# Development environment - includes database, hard-coded env vars
version: '3.9'
volumes:
  postgis-data:

services:
  traefik:
    image: "traefik:v2.9"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--entryPoints.web.address=:80"
      - "--providers.file.directory=/configuration/"
      - "--providers.file.watch=true"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "./traefik/configuration:/configuration"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/certs:/certs"

  frontend:
    image: ghcr.io/nismod/jsrat-frontend:0.1
    build: ./frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend:
    image: ghcr.io/nismod/jsrat-backend:0.1
    build: ./backend
    ports:
      - 8888:80
    environment:
      - PGHOST=db
      - PGDATABASE=jamaicadev
      - PGUSER=docker
      - PGPASSWORD=docker
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.services.backend.loadbalancer.server.port=80"

  vector-tileserver:
    image: ghcr.io/nismod/jsrat-vector-tileserver-dev:0.1
    build:
      context: ./tileserver/vector
      dockerfile: dev.Dockerfile
    volumes:
      - ./tileserver/vector/data:/data
      - ./tileserver/vector/config.json:/config.json
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vector-tileserver.rule=Host(`localhost`) && PathPrefix(`/vector`)"
      - "traefik.http.routers.vector-tileserver.entrypoints=web"
      - "traefik.http.routers.vector-tileserver.middlewares=vector-tileserver-stripprefix"
      - "traefik.http.middlewares.vector-tileserver-stripprefix.stripprefix.prefixes=/vector"
      - "traefik.http.services.vector-tileserver.loadbalancer.server.port=8080"

  raster-tileserver:
    image: ghcr.io/nismod/jsrat-raster-tileserver:0.1
    build: ./tileserver/raster
    volumes:
      - ./tileserver/raster/data:/data
      - ./tileserver/raster/config.toml:/config.toml
    expose:
      - "5000"
    environment:
      - TC_DRIVER_PATH=/data/terracotta.sqlite
      - TC_RESAMPLING_METHOD=nearest
      - TC_REPROJECTION_METHOD=nearest
      - TC_PNG_COMPRESS_LEVEL=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.raster-tileserver.rule=Host(`localhost`) && PathPrefix(`/raster`)"
      - "traefik.http.routers.raster-tileserver.entrypoints=web"
      - "traefik.http.routers.raster-tileserver.middlewares=raster-tileserver-stripprefix"
      - "traefik.http.middlewares.raster-tileserver-stripprefix.stripprefix.prefixes=/raster"
      - "traefik.http.services.raster-tileserver.loadbalancer.server.port=5000"

  db:
    image: kartoza/postgis:14-3.1
    volumes:
      - postgis-data:/var/lib/postgresql
    environment:
      - POSTGRES_DB=jamaicadev
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis
      - WAL_SIZE=4GB
    ports:
      - 25432:5432
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=docker pg_isready -h 127.0.0.1 -U docker -d jamaicadev"

  raster-tile-ingester:
    image: ghcr.io/nismod/jsrat-raster-tileserver:0.1
    build: ./tileserver/raster
    volumes:
      - ./tileserver/raster/data:/data
      - ./tileserver/raster/config.toml:/config.toml
    command:
      [
        "terracotta",
        "ingest",
        "/data/{type}__rp_{rp}__rcp_{rcp}__epoch_{epoch}__conf_{confidence}.tif",
        "-o",
        "/data/terracotta.sqlite"
      ]
